"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const command_1 = require("@oclif/command");
const pi_gen_1 = require("../pi-gen");
const walkSync = require('walk-sync');
class Compile extends command_1.Command {
    // static flags = {
    //   help: flags.help({char: 'h'}),
    //   // flag with a value (-n, --name=VALUE)
    //   name: flags.string({char: 'n', description: 'name to print'}),
    //   // flag with no value (-f, --force)
    //   force: flags.boolean({char: 'f'}),
    // }
    async run() {
        var default_path = "./src/";
        var g = new pi_gen_1.default();
        var paths = Array();
        var arr = walkSync(default_path);
        arr.forEach((el) => {
            if (el[0] != "." && el.indexOf("bootstrap/") == -1)
                paths.push(default_path + el);
        });
        // console.log("PATHS", paths);
        g.pages(paths);
        g.data();
        g.build();
        // let data = readFileSync(args.file)
        // var t = piTemplate(data, {foo:'Hello'}); //Hello
        // console.log(t)
    }
}
Compile.description = 'compile an src dir';
Compile.examples = [
    `$ pi-gen build`,
];
exports.default = Compile;
